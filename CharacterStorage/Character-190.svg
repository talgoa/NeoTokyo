<svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin meet" viewBox="0 0 680 660"><style>.lineCount { fill: #BABABA; font-family: consolas; font-size: 12px; }</style><style>.global { fill: #8B9189; font-family: consolas; font-size: 12px; }</style><style>.keyword { fill: #e0932d; font-family: consolas; font-size: 12px; }</style><style>.base { fill: white; font-family: consolas; font-size: 12px; }</style><rect width="100%" height="100%" fill="#242925" /><rect x="8" y="8" width="97.7%" height="98%" fill="#242925" /><rect x="8" y="8" width="3%" height="98%" fill="#2c302d"/><text x="15" y="20" class="lineCount">1</text><text x="15" y="40" class="lineCount">2</text><text x="15" y="60" class="lineCount">3</text><text x="15" y="80" class="lineCount">4</text><text x="15" y="100" class="lineCount">5</text><text x="15" y="120" class="lineCount">6</text><text x="15" y="140" class="lineCount">7</text><text x="15" y="160" class="lineCount">8</text><text x="15" y="180" class="lineCount">9</text><text x="12" y="200" class="lineCount">10</text><text x="12" y="220" class="lineCount">11</text><text x="12" y="240" class="lineCount">12</text><text x="12" y="260" class="lineCount">13</text><text x="12" y="280" class="lineCount">14</text><text x="12" y="300" class="lineCount">15</text><text x="12" y="320" class="lineCount">16</text><text x="12" y="340" class="lineCount">17</text><text x="12" y="360" class="lineCount">18</text><text x="12" y="380" class="lineCount">19</text><text x="12" y="400" class="lineCount">20</text><text x="12" y="420" class="lineCount">21</text><text x="12" y="440" class="lineCount">22</text><text x="12" y="460" class="lineCount">23</text><text x="12" y="480" class="lineCount">24</text><text x="12" y="500" class="lineCount">25</text><text x="12" y="520" class="lineCount">26</text><text x="12" y="540" class="lineCount">27</text><text x="12" y="560" class="lineCount">28</text><text x="12" y="580" class="lineCount">29</text><text x="12" y="600" class="lineCount">30</text><text x="12" y="620" class="lineCount">31</text><text x="12" y="640" class="lineCount">32</text><text x="30" y="20" class="keyword">using</text><text x="70" y="20" class="base">System;</text><text x="30" y="40" class="keyword">using</text><text x="70" y="40" class="base">System.IO;</text><text x="30" y="60" class="keyword">using</text><text x="70" y="60" class="base">System.Text.Json;</text><text x="30" y="80" class="keyword">using</text><text x="70" y="80" class="base">GameWorkspace.AuthUtils;</text><text x="30" y="120" class="keyword">class</text><text x="68" y="120" class="base">player {</text><text x="270" y="200" class="keyword">private string</text><text x="370" y="200" class="base">characterClass = "Developer";</text><text x="50" y="160" class="keyword">private string</text><text x="148" y="160" class="base">characterGender = "Female";</text><text x="325" y="160" class="keyword">private string</text><text x="425" y="160" class="base">characterRace = "Human";</text><text x="50" y="180" class="keyword">private int</text><text x="130" y="180" class="base">strength = 88;</text><text x="230" y="180" class="keyword">private int</text><text x="310" y="180" class="base">intelligence = 60;</text><text x="50" y="200" class="keyword">private int</text><text x="130" y="200" class="base">attractiveness = 62;</text><text x="320" y="140" class="keyword">private int</text><text x="400" y="140" class="base">techSkill = 11;</text><text x="440" y="180" class="keyword">private int</text><text x="520" y="180" class="base">cool = 67;</text><text x="345" y="220" class="keyword">private int</text><text x="425" y="220" class="base">credits = 437;</text><text x="50" y="220" class="keyword">private string</text><text x="150" y="220" class="base">characterEyes = "Grumpy";</text><text x="50" y="140" class="keyword">private string</text><text x="150" y="140" class="base">creditYield = "Low";</text><text x="50" y="240" class="keyword">private string</text><text x="150" y="240" class="base">ability = "None";</text><text x="330" y="240" class="base">};</text><text x="350" y="240" class="lineCount">//DAY ONE UPLOAD IDENTITY</text><text x="30" y="260" class="keyword">int</text><text x="60" y="260" class="base">main(</text><text x="95" y="260" class="keyword">string</text><text x="135" y="260" class="base">[] args) {</text><text x="50" y="280" class="keyword">player</text><text x="98" y="280" class="base">uniqueCharacter = GenerateCharacter();</text><text x="50" y="300" class="base">ApplyCredits(uniqueCharacter);</text><text x="50" y="320" class="keyword">try</text><text x="70" y="320" class="base">{</text><text x="90" y="320" class="keyword">string</text><text x="138" y="320" class="base">json = JsonSerializer.Serialize(uniqueCharacter);</text><text x="70" y="340" class="keyword">if</text><text x="90" y="340" class="base">(json !=</text><text x="150" y="340" class="keyword">null</text><text x="185" y="340" class="base">&amp;&amp; json.Length &gt; 0)</text><text x="315" y="340" class="base">{</text><text x="328" y="340" class="global">File</text><text x="355" y="340" class="base">.WriteAllText(</text><text x="448" y="340" class="global">Environment</text><text x="520" y="340" class="base">.CurrentDirectory</text><text x="90" y="360" class="base">+ "/CharacterStorage/Character-" + tokenId.toString() + ".json", json; } }</text><text x="50" y="380" class="base">catch (SerializationException e) {}</text><text x="50" y="400" class="base">metaverseObjects.Add(uniqueCharacter);</text><text x="50" y="420" class="keyword">WebSocket</text><text x="115" y="420" class="base">=</text><text x="125" y="420" class="keyword">new</text><text x="150" y="420" class="base">WebSocket(wsLocation);</text><text x="50" y="440" class="keyword">Task</text><text x="80" y="440" class="base">_t =</text><text x="110" y="440" class="keyword">await</text><text x="150" y="440" class="base">connection.send("Uploading character data: " + json);</text><text x="50" y="460" class="global">Console</text><text x="98" y="460" class="base">.Writeline("Upload task status :" + _t.Status);</text><text x="50" y="480" class="keyword">while</text><text x="85" y="480" class="base">(!_t.IsCompleted) { Thread.Sleep(500); }</text><text x="50" y="500" class="global">Console</text><text x="98" y="500" class="base">.Writeline("Upload task completed");</text><text x="50" y="520" class="base">CreateCharacterInterfaceHeaders(uniqueCharacter, 0, 0, housingParams[], *networkArray);</text><text x="50" y="540" class="base">ValidateAuthToken(uniqueCharacter, housingParams[], *networkArray);</text><text x="50" y="560" class="base">VerifyCharacterLinkedList(**database.Storage.CLL.(uniqueCharacter), *networkArray);</text><text x="50" y="580" class="global">Console</text><text x="98" y="580" class="base">.Writeline(PlayerStateCheck(uniqueCharacter));</text><text x="50" y="600" class="global">Console</text><text x="98" y="600" class="base">.Writeline("Welcome Citizen!");</text><text x="50" y="620" class="keyword">return</text><text x="98" y="620" class="base">0;</text><text x="30" y="640" class="base">}</text></svg>